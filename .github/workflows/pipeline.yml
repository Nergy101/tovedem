name: ðŸš€ Deploy Angular App

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Force Deploy'
        required: true
        type: boolean
        default: false
  push:
    branches: ["main"]

jobs:
  # Stage: build-and-push
  build-angular-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Replace Umami Analytics Placeholder with script tag
        run: |
          sed -i 's|<!--\* Umami Analytics Placeholder -->|<script defer src="https://umami.nergy.space/script.js" data-website-id="bab4204b-062f-4b87-9433-00ff1a6c091f"></script>|' src/index.html
      - name: Build Angular App
        run: npm run build:prod
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/

  build-and-push-docker-image:
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && inputs.deploy) }}
    needs: build-angular-app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.cd
          push: true
          tags: nergy101/tovedem:latest
          platforms: linux/arm64

  # Stage: deploy
  deploy-docker-image:
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && inputs.deploy) }}
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Get Known Hosts value
        run: echo "KNOWN_HOSTS=$(ssh-keyscan -H ${{ secrets.SSH_HOST }})" >> $GITHUB_ENV
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: github-actions
          known_hosts: ${{ env.KNOWN_HOSTS }}
          if_key_exists: replace
      - name: Deploy Docker Image to VM
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /root/code/tovedem
            docker compose pull
            docker compose up -d
